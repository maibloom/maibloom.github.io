{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentations, Manuals, and Tutorials","text":""},{"location":"urplans/","title":"URPlans Overview","text":""},{"location":"urplans/#made-by-maifoss-and-mai-bloom-tech-studio","title":"MADE BY MAIFOSS AND MAI BLOOM TECH STUDIO","text":"<p>URPlans is a lightweight task\u2010planning core written in Java that is based on Eisenhower Matrix and is powered by Spring Data JPA, Hibernate, and Project Lombok. You can run it as a standalone CLI tool to insert, list, show, delete, and search tasks backed by an H2 file\u2010based database.</p> <p>Key features:</p> <ul> <li>Java 21 compatible, built with Maven</li> <li>Uses Eisenhower Matrix method</li> <li>Persistence via Spring Data JPA + Hibernate, defaulting to H2 file storage  </li> <li>CLI\u2010only runner reading non-option arguments (no web server by default)  </li> <li>Deployable as a standalone jar: <code>target/urplans-1.0-SNAPSHOT.jar</code> </li> <li>Supports filtering by date, priority, paging, and full-text search  </li> </ul> <p>Use URPlans to manage simple to-do items, recurring schedules, or integrate its core into larger Spring Boot apps.</p> <p>Setup Usage Artitecture</p>"},{"location":"urplans/architecture/","title":"Artitecture","text":"<p>Inside src/main/java/org/maifoss/urplans/, the project is organized into clear slices.</p>"},{"location":"urplans/architecture/#cliclirunnerjava","title":"cli/CliRunner.java","text":"<p>The <code>cli/CliRunner.java</code> class is responsible for orchestrating command\u2011line interactions. It reads non\u2011option arguments and maps them to task operations such as insert, list, search, and delete. This class parses and validates each flag and its accompanying arguments, and it prints concise results to the command line for the user.</p>"},{"location":"urplans/architecture/#configquerydslconfigjava","title":"config/QuerydslConfig.java","text":"<p>The <code>config/QuerydslConfig.java</code> class provides the configuration needed for Querydsl, including beans such as <code>JPAQueryFactory</code> that enable type\u2011safe dynamic queries. It wires the <code>EntityManager</code> into the Querydsl factories and centralizes the query infrastructure so that it can be reused across repositories and services.</p>"},{"location":"urplans/architecture/#controllertaskcontrollerjava","title":"controller/TaskController.java","text":"<p>The <code>controller/TaskController.java</code> class exposes task operations through HTTP endpoints when the application is running in web mode. It defines REST mappings for create, list, search, and delete operations, maps incoming request payloads to domain objects, validates the inputs, delegates the calls to <code>TaskService</code>, and returns the results in JSON format.</p>"},{"location":"urplans/architecture/#repotaskrepositorycustomjava","title":"repo/TaskRepositoryCustom.java","text":"<p>The <code>repo/TaskRepositoryCustom.java</code> interface defines custom query operations that are not covered by the standard Spring Data JPA method names. It serves as the contract for implementing search APIs with filters for title, date, and priority, and it is typically paired with <code>TaskRepositoryCustomImpl</code>, which uses Querydsl to build dynamic predicates.</p>"},{"location":"urplans/architecture/#servicetaskservicejava","title":"service/TaskService.java","text":"<p>The <code>service/TaskService.java</code> class acts as the business fa\u00e7ade, coordinating validation, repository access, and transactional behavior. It is responsible for creating new tasks by parsing the <code>\"Title|Description|Date&gt;FOREVER|PRIORITY\"</code> format, validating the date and priority, and persisting the entity. It can list all tasks or filter them by date, supports pagination for search results, and performs searches by combining optional filters such as title, date, and priority through the custom repository. It also handles deletions by removing a task based on its ID, ensuring the task exists before performing the operation.</p>"},{"location":"urplans/architecture/#taskjava","title":"Task.java","text":"<p>The <code>Task.java</code> class is the JPA entity representing a task in the system. It defines the fields <code>id</code>, <code>title</code>, <code>description</code>, <code>dueDate</code>, and <code>priority</code>, and maps them to the database table used for task storage.</p>"},{"location":"urplans/architecture/#taskrepositoryjava","title":"TaskRepository.java","text":"<p>The <code>TaskRepository.java</code> interface is a Spring Data JPA repository for <code>Task</code>. It provides the standard CRUD operations such as create, read, update, and delete, without requiring explicit SQL or JPQL code.</p>"},{"location":"urplans/architecture/#urplansapplicationjava","title":"UrplansApplication.java","text":"<p>The <code>UrplansApplication.java</code> class is the Spring Boot application entry point. It contains the <code>main</code> method, which bootstraps the Spring context and launches the application in either CLI or web mode depending on configuration.</p> <p>Back \u2192</p>"},{"location":"urplans/setup/","title":"Setup","text":"<p>Follow these steps to setup <code>urplans</code>:</p>"},{"location":"urplans/setup/#1-install-dependencies","title":"1. Install dependencies","text":"<p>Make sure the following are installed on your system:</p> <ul> <li>Java Development Kit (JDK) 21 or later (includes the JRE)  </li> <li>Apache Maven 3.6+  </li> <li>Git (for cloning the repository)</li> </ul>"},{"location":"urplans/setup/#2-clone-the-repository","title":"2. Clone the repository","text":"<p>Use one of these commands to clone URPlans:</p> <ul> <li>via HTTPS:    <code>git clone https://github.com/MaiFOSS/urplans.git</code></li> <li>via SSH:    <code>git@github.com:MaiFOSS/urplans.git</code></li> <li>via Github CLI:    <code>gh repo clone MaiFOSS/urplans</code></li> </ul> <p>Alternatively, you can clone via your IDE\u2019s Git integration.</p>"},{"location":"urplans/setup/#3-build-the-project","title":"3. Build the project","text":"<p>3.1. Move to the project's directory</p> <pre><code>cd urplans\n</code></pre> <p>3.2 Secondly, build the file:</p> <pre><code>mvn -DskipTests clean package\n</code></pre> <p>The output should be similar to this:</p> <pre><code>[INFO] Scanning for projects...\n[INFO] \n[INFO] --------------------&lt; org.maifoss.urplans:urplans &gt;---------------------\n...\n[INFO] BUILD SUCCESS\n...\n</code></pre> <p>The built JAR will be at <code>target/urplans-1.0-SNAPSHOT.jar</code></p> <p>You\u2019re all set! Run URPlans with:</p> <pre><code>java -jar target/urplans-1.0-SNAPSHOT.jar\n</code></pre> <p>Usage \u2192</p>"},{"location":"urplans/usage/","title":"Usage","text":"<p>Here's the text converted to Markdown:</p> <pre><code># How to Use URPlans CLI\n\nURPlans provides a command-line interface (CLI) that reads non-option arguments (i.e. arguments that aren\u2019t Spring properties).  \n\n## Command Syntax\n\n```bash\njava -jar target/urplans-1.0-SNAPSHOT.jar &lt;command&gt; [parameters]\n</code></pre>"},{"location":"urplans/usage/#available-commands","title":"Available Commands","text":"<ul> <li>Insert a new task.   <code>-i \"Title|Description|&lt;startDate&gt;&gt;&lt;endDate&gt;|&lt;PRIORITY&gt;\"</code> </li> <li>Show tasks for a specific date.  <code>-s &lt;YYYY-MM-DD&gt;</code> </li> <li>List all tasks.  <code>-l</code> </li> <li> <p>Delete a task by its ID. <code>-d &lt;id&gt;</code> </p> </li> <li> <p>Search tasks by keyword, date, priority, and pagination parameters.  <code>--search &lt;keyword&gt; &lt;date&gt; &lt;priority&gt; &lt;page&gt; &lt;size&gt;</code> </p> </li> </ul> <p>Date format: <code>YYYY-MM-DD</code> Priority values: - <code>URGENT_IMPORTANT</code> - <code>NOT_URGENT_IMPORTANT</code> - <code>URGENT_NOT_IMPORTANT</code> - <code>NOT_URGENT_NOT_IMPORTANT</code></p> <p>Learn more in the Eisenhower Matrix guide</p>"},{"location":"urplans/usage/#examples","title":"Examples","text":"<p>Insert a task </p> <pre><code>java -jar target/urplans-1.0-SNAPSHOT.jar \\\n  -i \"Study Java|Prepare for certification|2025-08-13&gt;FOREVER|URGENT_IMPORTANT\"\n</code></pre> <p>Show tasks for a date </p> <pre><code>java -jar target/urplans-1.0-SNAPSHOT.jar -s 2025-08-13\n</code></pre> <p>List all tasks </p> <pre><code>java -jar target/urplans-1.0-SNAPSHOT.jar -l\n</code></pre> <p>Delete a task by ID </p> <pre><code>java -jar target/urplans-1.0-SNAPSHOT.jar -d 42\n</code></pre> <p>Search tasks with filters and pagination </p> <pre><code>java -jar target/urplans-1.0-SNAPSHOT.jar \\\n  --search \"java\" 2025-08-13 URGENT_IMPORTANT 0 20\n</code></pre> <p>Artitecture \u2192</p>"}]}